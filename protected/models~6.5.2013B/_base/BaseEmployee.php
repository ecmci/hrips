<?php

/**
 * This is the model base class for the table "employee".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Employee".
 *
 * Columns in table "employee" available as properties of the model,
 * followed by relations of table "employee" available as properties of the model.
 *
 * @property integer $Emp_ID
 * @property string $Lname
 * @property string $Fname
 * @property string $Mname
 * @property string $Fullname
 * @property string $Position
 * @property string $Department
 * @property string $Schedule
 * @property string $Emp_Status
 * @property string $Tax_Status
 * @property string $Birthday
 * @property string $Birthplace
 * @property string $Gender
 * @property string $Contact_No
 * @property integer $Height
 * @property integer $Weight
 * @property string $Blood_Type
 * @property string $Citizenship
 * @property string $Civil_Status
 * @property string $Spouse
 * @property integer $Children
 * @property string $Email_Add
 * @property string $Account_Number
 * @property string $SSS
 * @property string $TIN
 * @property string $PHIL_HEALTH
 * @property string $PAG_IBIG
 * @property string $Permanent_Add
 * @property string $Residential_Add
 * @property string $Monthly_Basic
 * @property string $Total_Semi_Monthly
 * @property string $Starting_Salary
 * @property string $Days_Work
 * @property string $Monthly_Night_Diff
 * @property string $Date_Hired
 * @property string $Date_Regularized
 * @property string $Total_Days_Work
 * @property string $NDHrsperWk
 * @property string $NDHrsCutOff
 * @property string $Date_Terminated
 * @property string $Act_Status
 * @property string $YearEnder
 *
 * @property HrisUsers $hrisUsers
 */
abstract class BaseEmployee extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'employee';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Employee|Employees', $n);
	}

	public static function representingColumn() {
		return 'Lname';
	}

	public function rules() {
		return array(
			array('Lname, Fname, Mname, Fullname, Position, Department, Schedule, Emp_Status, Tax_Status, Birthday, Birthplace, Gender, Contact_No, Height, Weight, Blood_Type, Citizenship, Civil_Status, Spouse, Children, Email_Add, Account_Number, PHIL_HEALTH, PAG_IBIG, Permanent_Add, Residential_Add, Monthly_Basic, Total_Semi_Monthly, Starting_Salary, Monthly_Night_Diff, Date_Hired, Date_Regularized, NDHrsCutOff, Date_Terminated, YearEnder', 'required'),
			array('Height, Weight, Children', 'numerical', 'integerOnly'=>true),
			array('Lname, Fname, Mname, Position, Department, Schedule, Birthplace, Citizenship, Civil_Status, Email_Add', 'length', 'max'=>30),
			array('Fullname, Contact_No, Account_Number', 'length', 'max'=>100),
			array('Emp_Status, Tax_Status, Spouse', 'length', 'max'=>60),
			array('Gender', 'length', 'max'=>10),
			array('Blood_Type', 'length', 'max'=>5),
			array('SSS, TIN, PHIL_HEALTH, PAG_IBIG, Monthly_Basic, Total_Semi_Monthly, Starting_Salary, Days_Work, Monthly_Night_Diff, Total_Days_Work, NDHrsperWk, NDHrsCutOff, YearEnder', 'length', 'max'=>20),
			array('Act_Status', 'length', 'max'=>250),
			array('SSS, TIN, Days_Work, Total_Days_Work, NDHrsperWk, Act_Status', 'default', 'setOnEmpty' => true, 'value' => null),
			array('Emp_ID, Lname, Fname, Mname, Fullname, Position, Department, Schedule, Emp_Status, Tax_Status, Birthday, Birthplace, Gender, Contact_No, Height, Weight, Blood_Type, Citizenship, Civil_Status, Spouse, Children, Email_Add, Account_Number, SSS, TIN, PHIL_HEALTH, PAG_IBIG, Permanent_Add, Residential_Add, Monthly_Basic, Total_Semi_Monthly, Starting_Salary, Days_Work, Monthly_Night_Diff, Date_Hired, Date_Regularized, Total_Days_Work, NDHrsperWk, NDHrsCutOff, Date_Terminated, Act_Status, YearEnder', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'hrisUsers' => array(self::HAS_ONE, 'HrisUsers', 'emp_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'Emp_ID' => Yii::t('app', 'Emp'),
			'Lname' => Yii::t('app', 'Lname'),
			'Fname' => Yii::t('app', 'Fname'),
			'Mname' => Yii::t('app', 'Mname'),
			'Fullname' => Yii::t('app', 'Fullname'),
			'Position' => Yii::t('app', 'Position'),
			'Department' => Yii::t('app', 'Department'),
			'Schedule' => Yii::t('app', 'Schedule'),
			'Emp_Status' => Yii::t('app', 'Emp Status'),
			'Tax_Status' => Yii::t('app', 'Tax Status'),
			'Birthday' => Yii::t('app', 'Birthday'),
			'Birthplace' => Yii::t('app', 'Birthplace'),
			'Gender' => Yii::t('app', 'Gender'),
			'Contact_No' => Yii::t('app', 'Contact No'),
			'Height' => Yii::t('app', 'Height'),
			'Weight' => Yii::t('app', 'Weight'),
			'Blood_Type' => Yii::t('app', 'Blood Type'),
			'Citizenship' => Yii::t('app', 'Citizenship'),
			'Civil_Status' => Yii::t('app', 'Civil Status'),
			'Spouse' => Yii::t('app', 'Spouse'),
			'Children' => Yii::t('app', 'Children'),
			'Email_Add' => Yii::t('app', 'Email Add'),
			'Account_Number' => Yii::t('app', 'Account Number'),
			'SSS' => Yii::t('app', 'Sss'),
			'TIN' => Yii::t('app', 'Tin'),
			'PHIL_HEALTH' => Yii::t('app', 'Phil Health'),
			'PAG_IBIG' => Yii::t('app', 'Pag Ibig'),
			'Permanent_Add' => Yii::t('app', 'Permanent Add'),
			'Residential_Add' => Yii::t('app', 'Residential Add'),
			'Monthly_Basic' => Yii::t('app', 'Monthly Basic'),
			'Total_Semi_Monthly' => Yii::t('app', 'Total Semi Monthly'),
			'Starting_Salary' => Yii::t('app', 'Starting Salary'),
			'Days_Work' => Yii::t('app', 'Days Work'),
			'Monthly_Night_Diff' => Yii::t('app', 'Monthly Night Diff'),
			'Date_Hired' => Yii::t('app', 'Date Hired'),
			'Date_Regularized' => Yii::t('app', 'Date Regularized'),
			'Total_Days_Work' => Yii::t('app', 'Total Days Work'),
			'NDHrsperWk' => Yii::t('app', 'Ndhrsper Wk'),
			'NDHrsCutOff' => Yii::t('app', 'Ndhrs Cut Off'),
			'Date_Terminated' => Yii::t('app', 'Date Terminated'),
			'Act_Status' => Yii::t('app', 'Act Status'),
			'YearEnder' => Yii::t('app', 'Year Ender'),
			'hrisUsers' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('Emp_ID', $this->Emp_ID);
		$criteria->compare('Lname', $this->Lname, true);
		$criteria->compare('Fname', $this->Fname, true);
		$criteria->compare('Mname', $this->Mname, true);
		$criteria->compare('Fullname', $this->Fullname, true);
		$criteria->compare('Position', $this->Position, true);
		$criteria->compare('Department', $this->Department, true);
		$criteria->compare('Schedule', $this->Schedule, true);
		$criteria->compare('Emp_Status', $this->Emp_Status, true);
		$criteria->compare('Tax_Status', $this->Tax_Status, true);
		$criteria->compare('Birthday', $this->Birthday, true);
		$criteria->compare('Birthplace', $this->Birthplace, true);
		$criteria->compare('Gender', $this->Gender, true);
		$criteria->compare('Contact_No', $this->Contact_No, true);
		$criteria->compare('Height', $this->Height);
		$criteria->compare('Weight', $this->Weight);
		$criteria->compare('Blood_Type', $this->Blood_Type, true);
		$criteria->compare('Citizenship', $this->Citizenship, true);
		$criteria->compare('Civil_Status', $this->Civil_Status, true);
		$criteria->compare('Spouse', $this->Spouse, true);
		$criteria->compare('Children', $this->Children);
		$criteria->compare('Email_Add', $this->Email_Add, true);
		$criteria->compare('Account_Number', $this->Account_Number, true);
		$criteria->compare('SSS', $this->SSS, true);
		$criteria->compare('TIN', $this->TIN, true);
		$criteria->compare('PHIL_HEALTH', $this->PHIL_HEALTH, true);
		$criteria->compare('PAG_IBIG', $this->PAG_IBIG, true);
		$criteria->compare('Permanent_Add', $this->Permanent_Add, true);
		$criteria->compare('Residential_Add', $this->Residential_Add, true);
		$criteria->compare('Monthly_Basic', $this->Monthly_Basic, true);
		$criteria->compare('Total_Semi_Monthly', $this->Total_Semi_Monthly, true);
		$criteria->compare('Starting_Salary', $this->Starting_Salary, true);
		$criteria->compare('Days_Work', $this->Days_Work, true);
		$criteria->compare('Monthly_Night_Diff', $this->Monthly_Night_Diff, true);
		$criteria->compare('Date_Hired', $this->Date_Hired, true);
		$criteria->compare('Date_Regularized', $this->Date_Regularized, true);
		$criteria->compare('Total_Days_Work', $this->Total_Days_Work, true);
		$criteria->compare('NDHrsperWk', $this->NDHrsperWk, true);
		$criteria->compare('NDHrsCutOff', $this->NDHrsCutOff, true);
		$criteria->compare('Date_Terminated', $this->Date_Terminated, true);
		$criteria->compare('Act_Status', $this->Act_Status, true);
		$criteria->compare('YearEnder', $this->YearEnder, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}