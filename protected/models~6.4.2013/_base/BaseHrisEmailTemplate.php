<?php

/**
 * This is the model base class for the table "hris_email_template".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "HrisEmailTemplate".
 *
 * Columns in table "hris_email_template" available as properties of the model,
 * followed by relations of table "hris_email_template" available as properties of the model.
 *
 * @property integer $id
 * @property string $subject
 * @property string $message
 * @property string $created
 * @property string $updated
 *
 * @property HrisEmailQueueForForms[] $hrisEmailQueueForForms
 */
abstract class BaseHrisEmailTemplate extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'hris_email_template';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'HrisEmailTemplate|HrisEmailTemplates', $n);
	}

	public static function representingColumn() {
		return 'subject';
	}

	public function rules() {
		return array(
			array('subject, message', 'required'),
			array('subject', 'length', 'max'=>100),
			array('updated', 'safe'),
			array('updated', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, subject, message, created, updated', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'hrisEmailQueueForForms' => array(self::HAS_MANY, 'HrisEmailQueueForForms', 'template_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'subject' => Yii::t('app', 'Subject'),
			'message' => Yii::t('app', 'Message'),
			'created' => Yii::t('app', 'Created'),
			'updated' => Yii::t('app', 'Updated'),
			'hrisEmailQueueForForms' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('subject', $this->subject, true);
		$criteria->compare('message', $this->message, true);
		$criteria->compare('created', $this->created, true);
		$criteria->compare('updated', $this->updated, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}