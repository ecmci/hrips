<?php

/**
 * This is the model base class for the table "hris_document_access".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "HrisDocumentAccess".
 *
 * Columns in table "hris_document_access" available as properties of the model,
 * followed by relations of table "hris_document_access" available as properties of the model.
 *
 * @property integer $id
 * @property integer $doc_id
 * @property integer $dept_id
 * @property integer $user_id
 * @property integer $read
 * @property integer $update
 * @property integer $delete
 *
 * @property HrisDocument $doc
 * @property HrisDept $dept
 * @property Employee $user
 */
abstract class BaseHrisDocumentAccess extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'hris_document_access';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'HrisDocumentAccess|HrisDocumentAccesses', $n);
	}

	public static function representingColumn() {
		return 'id';
	}

	public function rules() {
		return array(
			array('doc_id, dept_id, user_id', 'required'),
			array('doc_id, dept_id, user_id, read, update, delete', 'numerical', 'integerOnly'=>true),
			array('read, update, delete', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, doc_id, dept_id, user_id, read, update, delete', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'doc' => array(self::BELONGS_TO, 'HrisDocument', 'doc_id'),
			'dept' => array(self::BELONGS_TO, 'HrisDept', 'dept_id'),
			'user' => array(self::BELONGS_TO, 'Employee', 'user_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'doc_id' => null,
			'dept_id' => null,
			'user_id' => null,
			'read' => Yii::t('app', 'Read'),
			'update' => Yii::t('app', 'Update'),
			'delete' => Yii::t('app', 'Delete'),
			'doc' => null,
			'dept' => null,
			'user' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('doc_id', $this->doc_id);
		$criteria->compare('dept_id', $this->dept_id);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('read', $this->read);
		$criteria->compare('update', $this->update);
		$criteria->compare('delete', $this->delete);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}