<?php

/**
 * This is the model base class for the table "hris_document_log".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "HrisDocumentLog".
 *
 * Columns in table "hris_document_log" available as properties of the model,
 * followed by relations of table "hris_document_log" available as properties of the model.
 *
 * @property integer $id
 * @property integer $doc_id
 * @property integer $user_id
 * @property string $action
 * @property string $timestamp
 *
 * @property Employee $user
 * @property HrisDocument $doc
 */
abstract class BaseHrisDocumentLog extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'hris_document_log';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'HrisDocumentLog|HrisDocumentLogs', $n);
	}

	public static function representingColumn() {
		return 'action';
	}

	public function rules() {
		return array(
			array('doc_id, user_id, action, timestamp', 'required'),
			array('doc_id, user_id', 'numerical', 'integerOnly'=>true),
			array('id, doc_id, user_id, action, timestamp', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'user' => array(self::BELONGS_TO, 'Employee', 'user_id'),
			'doc' => array(self::BELONGS_TO, 'HrisDocument', 'doc_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'doc_id' => null,
			'user_id' => null,
			'action' => Yii::t('app', 'Action'),
			'timestamp' => Yii::t('app', 'Timestamp'),
			'user' => null,
			'doc' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('doc_id', $this->doc_id);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('action', $this->action, true);
		$criteria->compare('timestamp', $this->timestamp, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}