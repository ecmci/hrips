<?php

/**
 * This is the model base class for the table "emp_information".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "EmpInformation".
 *
 * Columns in table "emp_information" available as properties of the model,
 * followed by relations of table "emp_information" available as properties of the model.
 *
 * @property integer $EmpID
 * @property string $FirstName
 * @property string $LastName
 * @property string $MiddleName
 * @property string $NameExt
 * @property string $EmpName
 * @property string $ResidentialAddress
 * @property string $RAZipCode
 * @property string $RATelno
 * @property string $HomeAddress
 * @property string $HAZipCode
 * @property string $HATelno
 * @property string $ContactNo
 * @property string $BirthDate
 * @property string $BdayPlace
 * @property integer $Gender
 * @property integer $CivilStat
 * @property string $Citizenship
 * @property string $Height
 * @property string $Weight
 * @property string $BloodType
 * @property string $DateHire
 * @property string $DateRehire
 * @property string $DateResignation
 * @property string $DateTermination
 * @property string $DateRetirement
 * @property string $SSS
 * @property string $TIN
 * @property string $PHIC
 * @property string $HDMF
 * @property string $AcctNo
 * @property integer $AgencyEmpNo
 * @property string $Department
 * @property string $Position
 * @property string $ExtensionNo
 * @property string $OfficeSeatLocation
 * @property string $EmailAddress
 * @property integer $Tenant
 * @property integer $BedNo
 * @property string $Allowance
 * @property string $DateAPE
 * @property integer $CertifyTrue
 * @property integer $NewEmp
 * @property string $TaxCertNo
 * @property string $IssuedAt
 * @property string $IssuedOn
 * @property string $DateAccomplished
 * @property string $DateModified
 * @property integer $LastModifiedBy
 *
 * @property EmpAppraisals[] $empAppraisals
 * @property EmpChildren[] $empChildrens
 * @property EmpCivilservice[] $empCivilservices
 * @property EmpEducbg[] $empEducbgs
 * @property EmpFambg $empFambg
 * @property EmpGender $gender
 * @property EmpCivilstat $civilStat
 * @property EmpOrganization[] $empOrganizations
 * @property EmpOtherinfo $empOtherinfo
 * @property EmpQueries $empQueries
 * @property EmpRef[] $empRefs
 * @property EmpTraining[] $empTrainings
 * @property EmpWorkexp[] $empWorkexps
 */
abstract class BaseEmpInformation extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'emp_information';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'EmpInformation|EmpInformations', $n);
	}

	public static function representingColumn() {
		return 'FirstName';
	}

	public function rules() {
		return array(
			array('EmpID, FirstName, LastName, Tenant, DateAccomplished, DateModified', 'required'),
			array('EmpID, Gender, CivilStat, AgencyEmpNo, Tenant, BedNo, CertifyTrue, NewEmp, LastModifiedBy', 'numerical', 'integerOnly'=>true),
			array('FirstName, LastName, MiddleName, EmpName, Position, OfficeSeatLocation, IssuedAt', 'length', 'max'=>50),
			array('NameExt, Height, Weight, ExtensionNo', 'length', 'max'=>10),
			array('RAZipCode, HAZipCode', 'length', 'max'=>15),
			array('RATelno, HATelno', 'length', 'max'=>30),
			array('ContactNo, EmailAddress, TaxCertNo', 'length', 'max'=>25),
			array('BdayPlace', 'length', 'max'=>100),
			array('Citizenship, SSS, TIN, PHIC, HDMF, AcctNo, Allowance', 'length', 'max'=>20),
			array('BloodType', 'length', 'max'=>5),
			array('ResidentialAddress, HomeAddress, BirthDate, DateHire, DateRehire, DateResignation, DateTermination, DateRetirement, DateAPE, IssuedOn', 'safe'),
			array('MiddleName, NameExt, EmpName, ResidentialAddress, RAZipCode, RATelno, HomeAddress, HAZipCode, HATelno, ContactNo, BirthDate, BdayPlace, Gender, CivilStat, Citizenship, Height, Weight, BloodType, DateHire, DateRehire, DateResignation, DateTermination, DateRetirement, SSS, TIN, PHIC, HDMF, AcctNo, AgencyEmpNo, Department, Position, ExtensionNo, OfficeSeatLocation, EmailAddress, BedNo, Allowance, DateAPE, CertifyTrue, NewEmp, TaxCertNo, IssuedAt, IssuedOn, LastModifiedBy', 'default', 'setOnEmpty' => true, 'value' => null),
			array('EmpID, FirstName, LastName, MiddleName, NameExt, EmpName, ResidentialAddress, RAZipCode, RATelno, HomeAddress, HAZipCode, HATelno, ContactNo, BirthDate, BdayPlace, Gender, CivilStat, Citizenship, Height, Weight, BloodType, DateHire, DateRehire, DateResignation, DateTermination, DateRetirement, SSS, TIN, PHIC, HDMF, AcctNo, AgencyEmpNo, Department, Position, ExtensionNo, OfficeSeatLocation, EmailAddress, Tenant, BedNo, Allowance, DateAPE, CertifyTrue, NewEmp, TaxCertNo, IssuedAt, IssuedOn, DateAccomplished, DateModified, LastModifiedBy', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'empAppraisals' => array(self::HAS_MANY, 'EmpAppraisals', 'EmpID'),
			'empChildrens' => array(self::HAS_MANY, 'EmpChildren', 'EmpID'),
			'empCivilservices' => array(self::HAS_MANY, 'EmpCivilservice', 'EmpID'),
			'empEducbgs' => array(self::HAS_MANY, 'EmpEducbg', 'EmpID'),
			'empFambg' => array(self::HAS_ONE, 'EmpFambg', 'EmpID'),
			'gender' => array(self::BELONGS_TO, 'EmpGender', 'Gender'),
			'civilStat' => array(self::BELONGS_TO, 'EmpCivilstat', 'CivilStat'),
			'empOrganizations' => array(self::HAS_MANY, 'EmpOrganization', 'EmpID'),
			'empOtherinfo' => array(self::HAS_ONE, 'EmpOtherinfo', 'EmpID'),
			'empQueries' => array(self::HAS_ONE, 'EmpQueries', 'EmpID'),
			'empRefs' => array(self::HAS_MANY, 'EmpRef', 'EmpID'),
			'empTrainings' => array(self::HAS_MANY, 'EmpTraining', 'EmpID'),
			'empWorkexps' => array(self::HAS_MANY, 'EmpWorkexp', 'EmpID'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'EmpID' => Yii::t('app', 'Emp'),
			'FirstName' => Yii::t('app', 'First Name'),
			'LastName' => Yii::t('app', 'Last Name'),
			'MiddleName' => Yii::t('app', 'Middle Name'),
			'NameExt' => Yii::t('app', 'Name Ext'),
			'EmpName' => Yii::t('app', 'Emp Name'),
			'ResidentialAddress' => Yii::t('app', 'Residential Address'),
			'RAZipCode' => Yii::t('app', 'Razip Code'),
			'RATelno' => Yii::t('app', 'Ratelno'),
			'HomeAddress' => Yii::t('app', 'Home Address'),
			'HAZipCode' => Yii::t('app', 'Hazip Code'),
			'HATelno' => Yii::t('app', 'Hatelno'),
			'ContactNo' => Yii::t('app', 'Contact No'),
			'BirthDate' => Yii::t('app', 'Birth Date'),
			'BdayPlace' => Yii::t('app', 'Bday Place'),
			'Gender' => null,
			'CivilStat' => null,
			'Citizenship' => Yii::t('app', 'Citizenship'),
			'Height' => Yii::t('app', 'Height'),
			'Weight' => Yii::t('app', 'Weight'),
			'BloodType' => Yii::t('app', 'Blood Type'),
			'DateHire' => Yii::t('app', 'Date Hire'),
			'DateRehire' => Yii::t('app', 'Date Rehire'),
			'DateResignation' => Yii::t('app', 'Date Resignation'),
			'DateTermination' => Yii::t('app', 'Date Termination'),
			'DateRetirement' => Yii::t('app', 'Date Retirement'),
			'SSS' => Yii::t('app', 'Sss'),
			'TIN' => Yii::t('app', 'Tin'),
			'PHIC' => Yii::t('app', 'Phic'),
			'HDMF' => Yii::t('app', 'Hdmf'),
			'AcctNo' => Yii::t('app', 'Acct No'),
			'AgencyEmpNo' => Yii::t('app', 'Agency Emp No'),
			'Department' => Yii::t('app', 'Department'),
			'Position' => Yii::t('app', 'Position'),
			'ExtensionNo' => Yii::t('app', 'Extension No'),
			'OfficeSeatLocation' => Yii::t('app', 'Office Seat Location'),
			'EmailAddress' => Yii::t('app', 'Email Address'),
			'Tenant' => Yii::t('app', 'Tenant'),
			'BedNo' => Yii::t('app', 'Bed No'),
			'Allowance' => Yii::t('app', 'Allowance'),
			'DateAPE' => Yii::t('app', 'Date Ape'),
			'CertifyTrue' => Yii::t('app', 'Certify True'),
			'NewEmp' => Yii::t('app', 'New Emp'),
			'TaxCertNo' => Yii::t('app', 'Tax Cert No'),
			'IssuedAt' => Yii::t('app', 'Issued At'),
			'IssuedOn' => Yii::t('app', 'Issued On'),
			'DateAccomplished' => Yii::t('app', 'Date Accomplished'),
			'DateModified' => Yii::t('app', 'Date Modified'),
			'LastModifiedBy' => Yii::t('app', 'Last Modified By'),
			'empAppraisals' => null,
			'empChildrens' => null,
			'empCivilservices' => null,
			'empEducbgs' => null,
			'empFambg' => null,
			'gender' => null,
			'civilStat' => null,
			'empOrganizations' => null,
			'empOtherinfo' => null,
			'empQueries' => null,
			'empRefs' => null,
			'empTrainings' => null,
			'empWorkexps' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('EmpID', $this->EmpID);
		$criteria->compare('FirstName', $this->FirstName, true);
		$criteria->compare('LastName', $this->LastName, true);
		$criteria->compare('MiddleName', $this->MiddleName, true);
		$criteria->compare('NameExt', $this->NameExt, true);
		$criteria->compare('EmpName', $this->EmpName, true);
		$criteria->compare('ResidentialAddress', $this->ResidentialAddress, true);
		$criteria->compare('RAZipCode', $this->RAZipCode, true);
		$criteria->compare('RATelno', $this->RATelno, true);
		$criteria->compare('HomeAddress', $this->HomeAddress, true);
		$criteria->compare('HAZipCode', $this->HAZipCode, true);
		$criteria->compare('HATelno', $this->HATelno, true);
		$criteria->compare('ContactNo', $this->ContactNo, true);
		$criteria->compare('BirthDate', $this->BirthDate, true);
		$criteria->compare('BdayPlace', $this->BdayPlace, true);
		$criteria->compare('Gender', $this->Gender);
		$criteria->compare('CivilStat', $this->CivilStat);
		$criteria->compare('Citizenship', $this->Citizenship, true);
		$criteria->compare('Height', $this->Height, true);
		$criteria->compare('Weight', $this->Weight, true);
		$criteria->compare('BloodType', $this->BloodType, true);
		$criteria->compare('DateHire', $this->DateHire, true);
		$criteria->compare('DateRehire', $this->DateRehire, true);
		$criteria->compare('DateResignation', $this->DateResignation, true);
		$criteria->compare('DateTermination', $this->DateTermination, true);
		$criteria->compare('DateRetirement', $this->DateRetirement, true);
		$criteria->compare('SSS', $this->SSS, true);
		$criteria->compare('TIN', $this->TIN, true);
		$criteria->compare('PHIC', $this->PHIC, true);
		$criteria->compare('HDMF', $this->HDMF, true);
		$criteria->compare('AcctNo', $this->AcctNo, true);
		$criteria->compare('AgencyEmpNo', $this->AgencyEmpNo);
		$criteria->compare('Department', $this->Department, true);
		$criteria->compare('Position', $this->Position, true);
		$criteria->compare('ExtensionNo', $this->ExtensionNo, true);
		$criteria->compare('OfficeSeatLocation', $this->OfficeSeatLocation, true);
		$criteria->compare('EmailAddress', $this->EmailAddress, true);
		$criteria->compare('Tenant', $this->Tenant);
		$criteria->compare('BedNo', $this->BedNo);
		$criteria->compare('Allowance', $this->Allowance, true);
		$criteria->compare('DateAPE', $this->DateAPE, true);
		$criteria->compare('CertifyTrue', $this->CertifyTrue);
		$criteria->compare('NewEmp', $this->NewEmp);
		$criteria->compare('TaxCertNo', $this->TaxCertNo, true);
		$criteria->compare('IssuedAt', $this->IssuedAt, true);
		$criteria->compare('IssuedOn', $this->IssuedOn, true);
		$criteria->compare('DateAccomplished', $this->DateAccomplished, true);
		$criteria->compare('DateModified', $this->DateModified, true);
		$criteria->compare('LastModifiedBy', $this->LastModifiedBy);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}