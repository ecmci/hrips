<?php

/**
 * This is the model base class for the table "it_tickets".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Tickets".
 *
 * Columns in table "it_tickets" available as properties of the model,
 * followed by relations of table "it_tickets" available as properties of the model.
 *
 * @property integer $id
 * @property integer $category_id
 * @property integer $reported_by_id
 * @property integer $created_by_id
 * @property string $status
 * @property string $notes
 * @property string $created_timestamp
 * @property string $closed_timestamp
 *
 * @property Employee $createdBy
 * @property ItTicketsCategory $category
 * @property Employee $reportedBy
 */
abstract class BaseTickets extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'it_tickets';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Tickets|Tickets', $n);
	}

	public static function representingColumn() {
		return 'status';
	}

	public function rules() {
		return array(
			array('category_id, reported_by_id, created_by_id, status', 'required'),
			array('category_id, reported_by_id, created_by_id', 'numerical', 'integerOnly'=>true),
			array('status', 'length', 'max'=>512),
			array('notes, created_timestamp, closed_timestamp', 'safe'),
			array('notes, created_timestamp, closed_timestamp', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, category_id, reported_by_id, created_by_id, status, notes, created_timestamp, closed_timestamp', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'createdBy' => array(self::BELONGS_TO, 'Employee', 'created_by_id'),
			'category' => array(self::BELONGS_TO, 'TicketsCategory', 'category_id'),
			'reportedBy' => array(self::BELONGS_TO, 'Employee', 'reported_by_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'category_id' => null,
			'reported_by_id' => null,
			'created_by_id' => null,
			'status' => Yii::t('app', 'Status'),
			'notes' => Yii::t('app', 'Notes'),
			'created_timestamp' => Yii::t('app', 'Created Timestamp'),
			'closed_timestamp' => Yii::t('app', 'Closed Timestamp'),
			'createdBy' => null,
			'category' => null,
			'reportedBy' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('category_id', $this->category_id);
		$criteria->compare('reported_by_id', $this->reported_by_id);
		$criteria->compare('created_by_id', $this->created_by_id);
		$criteria->compare('status', $this->status, true);
		$criteria->compare('notes', $this->notes, true);
		$criteria->compare('created_timestamp', $this->created_timestamp, true);
		$criteria->compare('closed_timestamp', $this->closed_timestamp, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}