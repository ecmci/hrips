<?php

/**
 * This is the model base class for the table "hris_reports".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "HrisReports".
 *
 * Columns in table "hris_reports" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $title
 * @property string $sql_stmt
 * @property integer $created_by_user_id
 * @property string $created_timestamp
 * @property string $last_updated_timestamp
 *
 */
abstract class BaseHrisReports extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'hris_reports';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'HrisReports|HrisReports', $n);
	}

	public static function representingColumn() {
		return 'title';
	}

	public function rules() {
		return array(
			array('title, sql_stmt, created_by_user_id', 'required'),
			array('created_by_user_id', 'numerical', 'integerOnly'=>true),
			array('title', 'length', 'max'=>128),
			array('created_timestamp, last_updated_timestamp', 'safe'),
			array('created_timestamp, last_updated_timestamp', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, title, sql_stmt, created_by_user_id, created_timestamp, last_updated_timestamp', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'title' => Yii::t('app', 'Title'),
			'sql_stmt' => Yii::t('app', 'Sql Stmt'),
			'created_by_user_id' => Yii::t('app', 'Created By User'),
			'created_timestamp' => Yii::t('app', 'Created Timestamp'),
			'last_updated_timestamp' => Yii::t('app', 'Last Updated Timestamp'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('title', $this->title, true);
		$criteria->compare('sql_stmt', $this->sql_stmt, true);
		$criteria->compare('created_by_user_id', $this->created_by_user_id);
		$criteria->compare('created_timestamp', $this->created_timestamp, true);
		$criteria->compare('last_updated_timestamp', $this->last_updated_timestamp, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}