<?php

/**
 * This is the model base class for the table "employee_hrs".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "EmployeeHrs".
 *
 * Columns in table "employee_hrs" available as properties of the model,
 * followed by relations of table "employee_hrs" available as properties of the model.
 *
 * @property string $id
 * @property integer $emp_id
 * @property string $schedule
 * @property string $datetime_in
 * @property string $datetime_out
 * @property string $sched_in
 * @property string $sched_out
 * @property integer $job_code
 * @property string $OT_code
 * @property integer $breakflag
 * @property string $UTC_added
 * @property integer $process
 * @property string $raw_mins_late
 * @property string $mins_late
 * @property string $hrs_late
 * @property string $hrs_patch
 * @property integer $updated_to_payroll
 * @property string $Amt
 *
 * @property JobCode $jobCode
 */
abstract class BaseEmployeeHrs extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'employee_hrs';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'EmployeeHrs|EmployeeHrs', $n);
	}

	public static function representingColumn() {
		return 'schedule';
	}

	public function rules() {
		return array(
			array('schedule, datetime_in, datetime_out, sched_in, sched_out, breakflag, UTC_added, process, raw_mins_late, mins_late, hrs_late, hrs_patch, updated_to_payroll, Amt', 'required'),
			array('emp_id, job_code, breakflag, process, updated_to_payroll', 'numerical', 'integerOnly'=>true),
			array('schedule, OT_code', 'length', 'max'=>10),
			array('hrs_late, hrs_patch, Amt', 'length', 'max'=>20),
			array('emp_id, job_code, OT_code', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, emp_id, schedule, datetime_in, datetime_out, sched_in, sched_out, job_code, OT_code, breakflag, UTC_added, process, raw_mins_late, mins_late, hrs_late, hrs_patch, updated_to_payroll, Amt', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'jobCode' => array(self::BELONGS_TO, 'JobCode', 'job_code'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'emp_id' => Yii::t('app', 'Emp'),
			'schedule' => Yii::t('app', 'Schedule'),
			'datetime_in' => Yii::t('app', 'Datetime In'),
			'datetime_out' => Yii::t('app', 'Datetime Out'),
			'sched_in' => Yii::t('app', 'Sched In'),
			'sched_out' => Yii::t('app', 'Sched Out'),
			'job_code' => null,
			'OT_code' => Yii::t('app', 'Ot Code'),
			'breakflag' => Yii::t('app', 'Breakflag'),
			'UTC_added' => Yii::t('app', 'Utc Added'),
			'process' => Yii::t('app', 'Process'),
			'raw_mins_late' => Yii::t('app', 'Raw Mins Late'),
			'mins_late' => Yii::t('app', 'Mins Late'),
			'hrs_late' => Yii::t('app', 'Hrs Late'),
			'hrs_patch' => Yii::t('app', 'Hrs Patch'),
			'updated_to_payroll' => Yii::t('app', 'Updated To Payroll'),
			'Amt' => Yii::t('app', 'Amt'),
			'jobCode' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('emp_id', $this->emp_id);
		$criteria->compare('schedule', $this->schedule, true);
		$criteria->compare('datetime_in', $this->datetime_in, true);
		$criteria->compare('datetime_out', $this->datetime_out, true);
		$criteria->compare('sched_in', $this->sched_in, true);
		$criteria->compare('sched_out', $this->sched_out, true);
		$criteria->compare('job_code', $this->job_code);
		$criteria->compare('OT_code', $this->OT_code, true);
		$criteria->compare('breakflag', $this->breakflag);
		$criteria->compare('UTC_added', $this->UTC_added, true);
		$criteria->compare('process', $this->process);
		$criteria->compare('raw_mins_late', $this->raw_mins_late, true);
		$criteria->compare('mins_late', $this->mins_late, true);
		$criteria->compare('hrs_late', $this->hrs_late, true);
		$criteria->compare('hrs_patch', $this->hrs_patch, true);
		$criteria->compare('updated_to_payroll', $this->updated_to_payroll);
		$criteria->compare('Amt', $this->Amt, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}